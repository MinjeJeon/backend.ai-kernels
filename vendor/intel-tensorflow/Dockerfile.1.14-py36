FROM ubuntu:18.04
#FROM continuumio/miniconda3:4.5.4
# Intel Distributed Python 2019.04 with Conda
ENV LANG=C.UTF-8 LC_ALL=C.UTF-8
ENV PATH /opt/conda/bin:$PATH

RUN apt-get update --fix-missing && \
    apt-get install -y wget bzip2 ca-certificates libglib2.0-0 libxext6 libsm6 libxrender1 git mercurial subversion && \
    apt-get clean

RUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-4.5.4-Linux-x86_64.sh -O ~/miniconda.sh && \
    /bin/bash ~/miniconda.sh -b -p /opt/conda && \
    rm ~/miniconda.sh && \
    /opt/conda/bin/conda clean -tipsy && \
    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \
    echo ". /opt/conda/etc/profile.d/conda.sh" >> ~/.bashrc && \
    echo "conda activate base" >> ~/.bashrc && \
    find /opt/conda/ -follow -type f -name '*.a' -delete && \
    find /opt/conda/ -follow -type f -name '*.js.map' -delete && \
    /opt/conda/bin/conda clean -a
    
RUN apt update -y && \
    curl -sL https://deb.nodesource.com/setup_10.x | bash - && \
    apt install -y --no-install-recommends \
   	apt-transport-https \
	ca-certificates \
        gcc g++ make \
	gfortran \
	vim \
	cmake \
	yasm \
	graphviz \
	pkg-config \
        xz-utils \
        wget curl git-core \
        vim-tiny bzip2 zip unzip \
        libssl-dev \
        libmpdec2 \
        proj-bin libproj-dev \
        libgeos-dev libgeos++-dev \
        mime-support \
        libpq-dev \
        libtiff-dev \
        libjpeg-dev \
        libpng-dev \
	libavcodec-dev \
        libavformat-dev \
	libswscale-dev \
	libxine2-dev \
	libv4l-dev \
	git \
	vim \
	wget \
	gnupg2 \
	libexpat-dev 

WORKDIR /usr/local

#RUN conda config --set allow_conda_downgrades true
#RUN conda install -n root conda=4.6 
RUN conda config --add channels intel && \
    conda install -y -q intelpython3_full=2019.5 python=3 

RUN conda install -c anaconda numpy==1.16.2
RUN conda install -c anaconda pandas==0.25.1 
RUN conda install -c anaconda graphviz==2.40.1
RUN conda install -c conda-forge python-graphviz==0.13.2
RUN conda install -c anaconda Pillow==6.2.0 
RUN conda install -c anaconda pydot==1.4.1 
RUN conda install -c anaconda scikit-learn==0.20.3 
RUN conda install -c anaconda scipy==1.2.1 
RUN conda install -c anaconda seaborn==0.9.0 
RUN conda install -c anaconda selenium==3.141.0 && \
    conda install -c anaconda defusedxml==0.5.0 && \
    conda install -c anaconda networkx==2.3 && \
    conda install -c anaconda opencv 
RUN conda install -c anaconda tensorflow-mkl==1.14.0 && \
    conda install -c anaconda tensorboard 

RUN conda install -c conda-forge Keras==2.3.1 && \
    conda install -c conda-forge pickle5 && \
    conda install -c conda-forge pycocotools && \
    conda install -c conda-forge nodejs && \
    conda install -c conda-forge jupyterlab && \
    conda install -c conda-forge jupyterthemes && \
    conda install -c conda-forge ipywidgets && \
    conda install -c conda-forge jupyter_contrib_nbextensions && \
    conda install -c conda-forge jupyter_nbextensions_configurator
RUN conda install -c anaconda pip
RUN pip install --no-cache-dir test-generator==0.1.1
RUN conda clean --all && \
    rm -rf /root/.cache && \
    rm -f /tmp/*.whl

WORKDIR /tmp
RUN git clone https://github.com/hardikvasa/google-images-download.git
RUN cd google-images-download && python setup.py install    

ARG INSTALL_DIR=/opt/intel/openvino_2019.3.376

WORKDIR /tmp
RUN apt-get install -y --no-install-recommends cpio sudo
RUN curl -O http://registrationcenter-download.intel.com/akdlm/irc_nas/16057/l_openvino_toolkit_p_2019.3.376.tgz && \
    tar -xvzf l_openvino_toolkit_p_2019.3.376.tgz && \
    cd l_openvino_toolkit_p_2019.3.376 && \
    sed -i 's/decline/accept/g' silent.cfg && \
    bash ./install.sh -s silent.cfg 

RUN cd $INSTALL_DIR/deployment_tools/model_optimizer/install_prerequisites && \
    ./install_prerequisites.sh 
RUN cd $INSTALL_DIR/deployment_tools/inference_engine/samples && \
    bash build_samples.sh && \
    bash -c "source $INSTALL_DIR/bin/setupvars.sh"
RUN echo "source $INSTALL_DIR/bin/setupvars.sh" >> /root/.bashrc && \
    rm /tmp/l_openvino_toolkit_p_2019.3.376.tgz

WORKDIR /usr/local

COPY policy.yml /etc/backend.ai/jail/policy.yml

ENV PYTHONUNBUFFERED=1 \
    LIBRARY_PATH="/opt/conda/lib/libfabric" \
    PATH="/opt/intel/openvino_2019.3.376/deployment_tools/model_optimizer:/opt/intel/openvino_2019.3.376/python/python3.6:/opt/conda/bin/libfabric:/opt/conda/bin:/opt/conda/condabin:/opt/conda/bin:/opt/intel/openvino/python/python3.6:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin" \
    LANG=C.UTF-8 \
    CLASSPATH="/opt/conda/lib/mpi.jar" \
    CONDA_DEFAULT_ENV="base" \
    CONDA_EXE="/opt/conda/bin/conda" \
    CONDA_PREFIX="/opt/conda" \
    CONDA_PROMPT_MODIFIER="(base) " \
    CONDA_PYTHON_EXE="/opt/conda/bin/python" \
    CONDA_SHLVL="1" \
    FI_PROVIDER_PATH="/opt/conda/lib/libfabric/prov" \
    HOME="/home/work" \
    I_MPI_ROOT="/opt/conda" \
    LC_ALL="C.UTF-8" \
    OpenCV_DIR="/opt/intel/openvino_2019.3.376/opencv/cmake" \
    PYTHONPATH="/opt/intel/openvino_2019.3.376/python/python3.6:/opt/intel/openvino_2019.3.376/python/python3:/opt/intel/openvino_2019.3.376/deployment_tools/open_model_zoo/tools/accuracy_checker:/opt/intel/openvino_2019.3.376/deployment_tools/model_optimizer:" \
    LD_LIBRARY_PATH="/opt/intel/openvino_2019.3.376/opencv/lib:/opt/intel/opencl:/opt/intel/openvino_2019.3.376/deployment_tools/inference_engine/external/hddl/lib:/opt/intel/openvino_2019.3.376/deployment_tools/inference_engine/external/gna/lib:/opt/intel/openvino_2019.3.376/deployment_tools/inference_engine/external/mkltiny_lnx/lib:/opt/intel/openvino_2019.3.376/deployment_tools/inference_engine/external/tbb/lib:/opt/intel/openvino_2019.3.376/deployment_tools/inference_engine/lib/intel64:/opt/intel/openvino_2019.3.376/openvx/lib:/opt/conda/lib/libfabric:/opt/conda/lib" \
    InferenceEngine_DIR="/opt/intel/openvino_2019.3.376/deployment_tools/inference_engine/share" \
    HDDL_INSTALL_DIR="/opt/intel/openvino_2019.3.376/deployment_tools/inference_engine/external/hddl" \
    INTEL_CVSDK_DIR="/opt/intel/openvino_2019.3.376" \
    INTEL_OPENVINO_DIR="/opt/intel/openvino_2019.3.376" \
    MANPATH="/opt/conda/share/man:"

# Jupyter notebook extension
RUN mkdir -p /home/work/.jupyter/nbextension
WORKDIR /home/work/.jupyter/nbextension

RUN jupyter nbextensions_configurator enable && \
    jupyter contrib nbextension install && \
    jupyter nbextension enable --py --sys-prefix widgetsnbextension && \
    jupyter contrib nbextension install && \
    jupyter serverextension enable --py jupyterlab --sys-prefix && \
    jupyter labextension install @jupyter-widgets/jupyterlab-manager && \
    git clone https://github.com/lambdalisue/jupyter-vim-binding vim_binding && \
    jupyter nbextension enable /home/work/.jupyter/nbextension/vim_binding/vim_binding

# Install ipython kernelspec
RUN python3 -m ipykernel install --display-name "Intel Tensorflow 1.14 on Backend.AI" && \
    cat /opt/conda/share/jupyter/kernels/python3/kernel.json

# Backend.AI specifics
LABEL ai.backend.kernelspec="1" \
      ai.backend.envs.corecount="OPENBLAS_NUM_THREADS,OMP_NUM_THREADS,NPROC" \
      ai.backend.features="batch query uid-match user-input" \
      ai.backend.resource.min.cpu="1" \
      ai.backend.resource.min.mem="256m" \
      ai.backend.base-distro="ubuntu16.04" \
      ai.backend.runtime-type="python" \
      ai.backend.runtime-path="/opt/conda/bin/python3" \
      ai.backend.service-ports="ipython:pty:3000,tensorboard:http:6006,jupyter:http:8080,jupyterlab:http:8090"


WORKDIR /home/work
# vim: ft=dockerfile
