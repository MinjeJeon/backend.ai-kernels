FROM nvcr.io/nvidia/tensorflow:19.05-py3
# NVIDIA Tensorflow runs on Python 3.5

ARG FROM_IMAGE_NAME=nvcr.io/nvidia/tensorflow:19.05-py3
FROM ${FROM_IMAGE_NAME}

# Install dependencies for system configuration logger
RUN apt-get update && apt-get install -y --no-install-recommends \
        python2.7 \
        infiniband-diags \
        pciutils && \
    rm -rf /var/lib/apt/lists/*

# Install gsutil
ENV CLOUDSDK_PYTHON /usr/bin/python2.7
RUN curl https://sdk.cloud.google.com | bash -s -- --disable-prompts
ENV PATH $PATH:/root/google-cloud-sdk/bin

# Install Python dependencies
WORKDIR /opt/reinforcement

COPY minigo/requirements.txt requirements.txt
RUN pip install --no-cache-dir https://github.com/mlperf/training/archive/6289993e1e9f0f5c4534336df83ff199bd0cdb75.zip#subdirectory=compliance \
 && pip install --no-cache-dir -r requirements.txt

# Copy MiniGo code and build
COPY . .

ENV BOARD_SIZE 9

RUN cp -r /opt/reinforcement/minigo/cc /opt/tensorflow && \
    cp -r /usr/local/lib/tensorflow /opt/tensorflow/cc && \
    cp -r /usr/local/lib/python3.5/dist-packages/tensorflow/include/* /opt/tensorflow/cc/tensorflow && \
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64/stubs && \
    ln -fs /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1 && \
    cd /opt/tensorflow && cp -r /usr/local/mpi cc/ && ./nvbuild.sh --python3.5 --configonly && \
    bazel build -c opt --cxxopt="-D_GLIBCXX_USE_CXX11_ABI=0" --define=gpu=1 --define=trt=1 --define=tf=1 --define=board_size=${BOARD_SIZE} cc:selfplay cc:eval cc:selfplay_mpi cc:eval_mpi && \
    cp -r bazel-bin /opt/reinforcement/minigo

ENV PYTHONUNBUFFERED=1 \
    PATH=/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"$PATH \
    LANG=C.UTF-8

RUN /usr/bin/python3 -m pip install -U pip setuptools && \
    /usr/bin/python3 -m pip install --no-cache-dir ipython && \
    /usr/bin/python3 -m pip install --no-cache-dir pillow && \
    /usr/bin/python3 -m pip install --no-cache-dir h5py && \
    /usr/bin/python3 -m pip install --no-cache-dir jupyter

# Install ipython kernelspec
RUN /usr/bin/python3 -m ipykernel install --display-name "benchmark MiniGo worked by NGC-Tensorflow 19.05 on Backend.AI" && \
    cat /usr/local/share/jupyter/kernels/python3/kernel.json

# Backend.AI specifics
COPY policy.yml /etc/backend.ai/jail/policy.yml
LABEL ai.backend.kernelspec="1" \
      ai.backend.envs.corecount="OPENBLAS_NUM_THREADS,OMP_NUM_THREADS,NPROC" \
      ai.backend.features="batch uid-match" \
      ai.backend.accelerators="cuda" \
      ai.backend.resource.min.cpu="1" \
      ai.backend.resource.min.mem="1g" \
      ai.backend.resource.min.cuda.device=1 \
      ai.backend.resource.min.cuda.shares=0.1 \
      ai.backend.base-distro="ubuntu16.04" \
      ai.backend.runtime-type="python" \
      ai.backend.runtime-path="/usr/bin/python3" \
      ai.backend.service-ports="ipython:pty:3000,tensorboard:http:6006,jupyter:http:8080"

# vim: ft=dockerfile
