FROM nvcr.io/hpc/autodock:2020.06
# NVIDIA Autodock-GPU

ENV PYTHONUNBUFFERED=1 \
    _CUDA_COMPAT_PATH="/usr/local/cuda/compat" \
    LD_LIBRARY_PATH=/usr/local/cuda/lib:/usr/local/cuda/lib64: \
    LIBRARY_PATH=/usr/local/cuda/lib64/stubs: \
    NVIDIA_DRIVER_CAPABILITIES=all \
    NVIDIA_REQUIRE_CUDA=cuda>=11.0 \
    brand=tesla,driver>=440,driver<441 \
    brand=tesla,driver>=418,driver<419 \
    NVIDIA_VISIBLE_DEVICES=all \
    PATH=/opt/AutoDock-GPU/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin \
    LANG=C.UTF-8

RUN apt-get update -y && \
    apt install -y --no-install-recommends \
        libgfortran3 libgomp1 \
	curl wget git \
	python3-dev \
        ncurses-term \
        unzip zlib1g-dev htop && \
    curl -sL https://deb.nodesource.com/setup_10.x | bash - && \
    apt-get update -y && \
    apt install -y --no-install-recommends \
        nodejs && \
    rm -rf /var/lib/apt/lists/* && \
    ln -sf /usr/share/terminfo/x/xterm-color /usr/share/terminfo/x/xterm-256color

# install git-lfs
WORKDIR /tmp
RUN curl -sLO https://github.com/git-lfs/git-lfs/releases/download/v2.12.1/git-lfs-linux-amd64-v2.12.1.tar.gz && \
    tar -zxf git-lfs-linux-amd64-v2.12.1.tar.gz && \
    bash install.sh && \
    rm -rf /tmp/*
RUN curl -fL https://github.com/cdr/code-server/releases/download/v3.7.3/code-server-3.7.3-linux-amd64.tar.gz | tar -C /usr/local/lib -xz && \
    mv /usr/local/lib/code-server-3.7.3-linux-amd64 /usr/local/lib/code-server-3.7.3 && \
    ln -s /usr/local/lib/code-server-3.7.3/bin/code-server /usr/local/bin/code-server

RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 2
COPY ./service-defs /etc/backend.ai/service-defs

WORKDIR /tmp
RUN curl https://bootstrap.pypa.io/get-pip.py | python3 && \
    python3 -m pip install --no-cache-dir -U setuptools pip 
RUN python3 -m pip install --no-cache-dir pillow && \
    python3 -m pip install --no-cache-dir \
       jupyter==1.0.0 \
       jupyter-client==6.0.0 \
       jupyter-console==6.1.0 \
       jupyter-contrib-core==0.3.3 \
       jupyter-contrib-nbextensions==0.5.1 \
       jupyter-core==4.6.3 \
       jupyter-dash==0.4.0 \
       jupyter-highlight-selected-word==0.2.0 \
       jupyter-js-widgets-nbextension==0.0.2.dev0 \
       jupyter-lsp==0.8.0 \
       jupyter-latex-envs==1.4.6 \
       jupyter-nbextensions-configurator==0.4.1 \
       jupyter-server-proxy==1.2.0 \
       jupyterlab==2.1.4 \
       jupyterlabutils==0.9.0 \
       jupyterlab-git==0.20.0 \
       jupyterlab-github==2.0.0 \
       jupyterlab-server==1.1.5 \
       jupyterlab_hdf==0.3.0 \
       jupyterthemes==0.20.0

RUN jupyter nbextensions_configurator enable && \
    jupyter contrib nbextension install && \
    jupyter nbextension enable --py --sys-prefix widgetsnbextension && \
    jupyter serverextension enable --py jupyterlab --sys-prefix && \
    jupyter labextension install --no-build @jupyter-widgets/jupyterlab-manager && \
    jupyter labextension install --no-build @krassowski/jupyterlab-lsp && \
    jupyter serverextension enable --py jupyter_lsp && \
    jupyter labextension install --no-build @jupyterlab/toc && \
    jupyter nbextension enable execute_time/ExecuteTime && \
    jupyter nbextension enable toc2/main && \
    jupyter labextension install @pyviz/jupyterlab_pyviz && \
    jupyter labextension install @bokeh/jupyter_bokeh && \
    jupyter labextension install --no-build jupyterlab-nvdashboard && \
    jupyter lab build

RUN apt autoclean && \
    rm -rf /var/lib/apt/lists/* && \	
    rm -rf /root/.cache && \
    rm -rf /tmp/*

# Install ipython kernelspec
RUN /usr/bin/python3 -m ipykernel install --display-name "NGC Autodock-GPU 20.06 on Backend.AI" && \
    cat /usr/local/share/jupyter/kernels/python3/kernel.json

# Backend.AI specifics
LABEL ai.backend.kernelspec="1" \
      ai.backend.envs.corecount="OPENBLAS_NUM_THREADS,OMP_NUM_THREADS,NPROC" \
      ai.backend.features="batch query uid-match user-input" \
      ai.backend.base-distro="ubuntu16.04" \
      ai.backend.accelerators="cuda" \
      ai.backend.resource.min.cpu="1" \
      ai.backend.resource.min.mem="1g" \
      ai.backend.resource.min.cuda.device=1 \
      ai.backend.resource.min.cuda.shares=0.1 \
      ai.backend.runtime-type="python" \
      ai.backend.runtime-path="/usr/bin/python" \
      ai.backend.service-ports="ipython:pty:3000,jupyter:http:8080,jupyterlab:http:8090"

#/usr/bin/nventry
WORKDIR /home/work
# vim: ft=dockerfile
