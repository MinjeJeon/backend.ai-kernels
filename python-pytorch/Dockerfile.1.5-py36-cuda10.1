FROM lablup/common-base:20.03-py36-cuda10.1

# Install TensorFlow, Keras, PyTorch and MXNet
ENV PYTORCH_VERSION=1.5.0
ENV TORCHVISION_VERSION=0.6.0
ENV TORCHAUDIO_VERSION=0.5.0
ENV TORCHTEXT_VERSION=0.6.0
ENV TENSORBOARDX_VERSION=1.9
ENV DEBIAN_FRONTEND=noninteractive
ENV mecab_dicdir /usr/local/lib/mecab/dic/mecab-ko-dic

ENV PYTHONUNBUFFERED=1 \
    LD_LIBRARY_PATH="/usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:/usr/local/nvidia/lib64:/usr/include/x86_64-linux-gnu" \
    PATH="/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/bin/mecab" \
    LANG=C.UTF-8

# Set default shell to /bin/bash
SHELL ["/bin/bash", "-cu"]

# Install TensorFlow, Keras, PyTorch and MXNet
RUN python3 -m pip install pip --no-cache-dir -Iv \
    	    Cython==0.29.13 \
            numpy==1.16.5 \
    	    scipy==1.4.1 \
	    scikit-image==0.16.2 \
    	    scikit-learn==0.21.3 \
	    matplotlib==3.1.3 \
	    tornado==6.0.4 \
	    pystan==2.19.1.1 \
	    notebook==6.0.3

RUN python3 -m pip install --no-cache-dir \
    	https://download.pytorch.org/whl/cu101/torch-${PYTORCH_VERSION}%2Bcu101-cp36-cp36m-linux_x86_64.whl \
        https://download.pytorch.org/whl/cu101/torchvision-${TORCHVISION_VERSION}%2Bcu101-cp36-cp36m-linux_x86_64.whl \
        https://download.pytorch.org/whl/torchaudio-${TORCHAUDIO_VERSION}-cp36-cp36m-linux_x86_64.whl \
        torchtext==${TORCHTEXT_VERSION} && \
    python3 -m pip install --no-cache-dir tensorboardX==${TENSORBOARDX_VERSION}	
RUN python3 -m pip install --no-cache-dir --extra-index-url \
    	    https://developer.download.nvidia.com/compute/redist/cuda/10.0 \
	    nvidia-dali 	    

RUN python3 -m pip install pip --no-cache-dir \
	    jupyter-tensorboard==0.2.0 \
    	    tensorwatch==0.8.10 \
	    jupyterlab-nvdashboard==0.2.0 

# Install Horovod, temporarily using CUDA stubs
RUN ldconfig /usr/local/cuda/targets/x86_64-linux/lib/stubs && \
    HOROVOD_GPU_ALLREDUCE=NCCL HOROVOD_GPU_BROADCAST=NCCL \
    HOROVOD_WITH_TENSORFLOW=1 HOROVOD_WITH_PYTORCH=1 HOROVOD_WITHOUT_MXNET=1 \
    pip install --no-cache-dir git+https://github.com/horovod/horovod && \
#    horovod==0.19.0 && \
    ldconfig

RUN python3 -m pip install --no-cache-dir \
    	    mpi4py==3.0.3 \
	    nni

# Install ipython kernelspec
Run python3 -m ipykernel install --display-name "PyTorch 1.5 on Python 3.6 (CUDA 10.1)" && \
    cat /usr/local/share/jupyter/kernels/python3/kernel.json

# Jupyter notebook extension
RUN mkdir -p /home/work/.jupyter/nbextension
WORKDIR /home/work/.jupyter/nbextension

RUN jupyter nbextensions_configurator enable && \
    jupyter contrib nbextension install && \
    jupyter nbextension enable --py --sys-prefix widgetsnbextension && \
    jupyter contrib nbextension install && \
    jupyter serverextension enable --py jupyterlab --sys-prefix && \
    jupyter labextension install @jupyter-widgets/jupyterlab-manager && \
#    jupyter labextension install jupyterlab-nvdashboard && \
    git clone https://github.com/lambdalisue/jupyter-vim-binding vim_binding && \
    jupyter nbextension enable /home/work/.jupyter/nbextension/vim_binding/vim_binding 

# Backend.AI specifics
LABEL ai.backend.kernelspec="1" \
      ai.backend.envs.corecount="OPENBLAS_NUM_THREADS,OMP_NUM_THREADS,NPROC" \
      ai.backend.features="batch query uid-match user-input" \
      ai.backend.base-distro="ubuntu16.04" \
      ai.backend.resource.min.cpu="1" \
      ai.backend.resource.min.mem="1g" \
      ai.backend.resource.min.cuda.device=0 \
      ai.backend.resource.min.cuda.shares=0 \
      ai.backend.runtime-type="python" \
      ai.backend.runtime-path="/usr/bin/python3" \
      ai.backend.service-ports="ipython:pty:3000,tensorboard:http:6006,jupyter:http:8080,jupyterlab:http:8090"

WORKDIR /home/work
# vim: ft=dockerfile
