FROM lablup/common-base:py38-cuda11.1

RUN python3 -m pip install --no-cache-dir --upgrade \
	    -q git+https://github.com/google-research/tensorflow_constrained_optimization
	    
RUN python3 -m pip install --no-cache-dir \
      --use-feature=2020-resolver \
        requests_oauthlib==1.2.0 \
	neural-structured-learning==1.3.1 \
	pydot==1.4.0 \
	proto-plus==1.10.2
RUN python3 -m pip install --no-cache-dir \
      --use-feature=2020-resolver \
	    tensorflow-transform==0.25.0 \
	    tensorflow_model_analysis \
	    tensorflow-datasets \
	    tensorflow_probability==0.11.1 \ 
	    tensorflow-addons==0.11.2 \
	    neural-structured-learning==1.3.1 \
	    tensorflow-model-optimization==0.5.0 \
	    tfx==0.25.0 \
	    tfx-bsl==0.25.0 \ 
	    tf-agents==0.6.0  

RUN python3 -m pip install --no-cache-dir \
      --use-feature=2020-resolver \
	    fastavro==1.2.0 \
	    pymongo==3.11.2 \
	    docker==4.4.1 \
	    pbr==5.5.1 \
	    mock==1.3.0 \
	    proto-plus==1.13.0 \
	    oauth2client==4.1.3 \
	    future==0.18.1 \
	    gin_config==0.4.0 \
	    joblib==0.14.0 \
	    libcst==0.3.14 

RUN python3 -m pip install --no-cache-dir \
      --use-feature=2020-resolver \
	    google_cloud_spanner==1.19.0 \
	    googleapis-common-protos==1.51.0 \
	    google_cloud_videointelligence==1.15.0 \
	    google_cloud_vision==0.42.0 \
	    google_cloud_pubsub==1.6.0 \
	    google_cloud_dlp==0.15.0 \
	    google_cloud_datastore==1.15.2 \
	    google_cloud_bigtable==1.6.0 \
	    google_api_core==1.24.0 

RUN python3 -m pip install --no-cache-dir \
	    mesh-tensorflow==0.1.18 \
            tensorflow-cloud==0.1.10 \
            tensorflow-hub==0.9.0 

RUN python3 -m pip install --no-cache-dir \
	    -i https://pypi-nightly.tensorflow.org/simple tensorflow-data-validation
RUN python3 -m pip install --no-cache-dir \
	    tensorflow-graphics-gpu==1.0.0 \
            tensorflow-io==0.17.0 \
	    tensorflow_ranking==0.3.2 \
	    tensorflow-plot==0.3.2 \
	    tensorflow_text==2.4.1 \
	    tensorflow-gan==2.0.0 
RUN python3 -m pip uninstall --no-cache-dir -y \
            tensorflow==2.3.0 \
	    tensorflow-gpu==2.4.1 \
	    tensorboard==2.3.0 \
	    tensorboard-plugin-wit==1.7.0 && \
    python3 -m pip install --no-cache-dir \
            tensorflow-gpu==2.4.1 \
	    tensorboard-plugin-wit==1.8.0 \
	    tensorboard==2.4.1

RUN python3 -m pip install --extra-index-url \
       https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda100 \
       && \
    python3 -m pip install --extra-index-url \
       https://developer.download.nvidia.com/compute/redist nvidia-dali-tf-plugin-cuda100

# Install PyTorch and MXNet
ENV PYTORCH_VERSION=1.7.1
ENV TORCHVISION_VERSION=0.8.2
ENV TORCHAUDIO_VERSION=0.7.2
ENV TORCHTEXT_VERSION=0.8.1
ENV TENSORBOARDX_VERSION=2.1
ENV MXNET_VERSION=1.6.0

RUN python3 -m pip uninstall -y torch && \
    python3 -m pip install --no-cache-dir \
    	https://download.pytorch.org/whl/cu110/torch-${PYTORCH_VERSION}%2Bcu110-cp38-cp38-linux_x86_64.whl \
	https://download.pytorch.org/whl/cu110/torchvision-${TORCHVISION_VERSION}%2Bcu110-cp38-cp38-linux_x86_64.whl \
        https://download.pytorch.org/whl/torchaudio-${TORCHAUDIO_VERSION}-cp38-cp38-linux_x86_64.whl \
        https://download.pytorch.org/whl/torchtext-${TORCHTEXT_VERSION}-cp38-cp38-linux_x86_64.whl && \
    python3 -m pip install --no-cache-dir tensorboardX==${TENSORBOARDX_VERSION}

RUN python3 -m pip install --no-cache-dir mxnet mkl

# Install Horovod, temporarily using CUDA stubs
RUN ldconfig /usr/local/cuda/targets/x86_64-linux/lib/stubs && \
    HOROVOD_GPU_ALLREDUCE=NCCL HOROVOD_GPU_BROADCAST=NCCL \
    HOROVOD_WITH_TENSORFLOW=1 HOROVOD_WITH_PYTORCH=1 HOROVOD_WITHOUT_MXNET=1 \
    pip install --no-cache-dir horovod==0.21.1 && \
    ldconfig

RUN python3 -m pip install --no-cache-dir \
    	    mpi4py==3.0.3 \
            mlflow==1.12.1 \
	    nni==1.9 \
	    scikit-nni==0.2.1

# install kaldi
WORKDIR /opt
RUN apt update && \
    apt list --upgradable && \
    apt-get install -y --no-install-recommends \
	patch wget rsync jq gnupg libtcmalloc-minimal4 && \
    apt-get install -y --no-install-recommends \
        automake \
        autoconf \
        flac \
        gawk \
        libatlas3-base \
        libtool \
        sox \
	subversion \
        unzip \
        bc \
        libatlas-base-dev \
        gfortran \
        zlib1g-dev && \
    apt-get install -y --no-install-recommends \
        git libglib2.0-0 less libnl-route-3-200 libnl-3-dev \
	libnl-route-3-dev libnuma-dev libnuma1 \
	libpmi2-0-dev nano numactl openssh-client vim && \
    rm -rf /var/lib/apt/lists/*
RUN ln -sf /usr/include/x86_64-linux-gnu/atlas /usr/local/include/atlas && \
    ln -sf /usr/include/x86_64-linux-gnu/cblas.h /usr/local/include/cblas.h && \
    ln -sf /usr/include/x86_64-linux-gnu/clapack.h /usr/local/include/clapack.h && \
    ln -sf /usr/lib/x86_64-linux-gnu/atlas /usr/local/lib/atlas

RUN git clone https://github.com/hephaex/kaldi.git /opt/kaldi && \
    cd /opt/kaldi/tools && \
    make -j $(nproc) && \
    cd /opt/kaldi/src && \
    ./configure --shared --use-cuda \
	--cudatk-dir=/usr/local/cuda/ \
	--mathlib=ATLAS \
    	--cuda-arch="-gencode arch=compute_52,code=sm_52 -gencode arch=compute_60,code=sm_60 -gencode arch=compute_61,code=sm_61 -gencode arch=compute_70,code=sm_70 -gencode arch=compute_75,code=sm_75 -gencode arch=compute_80,code=sm_80" && \
    make depend -j $(nproc) && \
    make -j $(nproc) 
RUN cd /opt/kaldi/src  && \
    make ext -j $(nproc) && \
    ldconfig && \
    find /opt/kaldi  -type f \( -name "*.o" -o -name "*.la" -o -name "*.a" \) -\
exec rm {} \; && \
    rm -rf /opt/kaldi/.git

RUN mkdir -p /workspace && \
    chmod -R 777 /workspace

RUN apt autoclean && \
    rm -rf /var/lib/apt/lists/* && \	
    rm -rf /root/.cache && \
    rm -rf /tmp/*

# Copy Backend.Ai multi-node support
COPY runner-scripts/bootstrap.sh runner-scripts/setup_multinode.py /opt/container/
COPY ./service-defs /etc/backend.ai/service-defs

# Install ipython kernelspec
Run python3 -m ipykernel install --display-name "Lablup FF 21.01 on Python 3.8 (CUDA 11.1)" && \
    cat /usr/local/share/jupyter/kernels/python3/kernel.json

# Backend.AI specifics
LABEL ai.backend.kernelspec="1" \
      ai.backend.envs.corecount="OPENBLAS_NUM_THREADS,OMP_NUM_THREADS,NPROC" \
      ai.backend.features="batch query uid-match user-input" \
      ai.backend.base-distro="ubuntu16.04" \
      ai.backend.resource.min.cpu="1" \
      ai.backend.resource.min.mem="1g" \
      ai.backend.resource.min.cuda.device=0 \
      ai.backend.resource.min.cuda.shares=0 \
      ai.backend.runtime-type="python" \
      ai.backend.runtime-path="/usr/bin/python3" \
      ai.backend.service-ports="ipython:pty:3000,jupyter:http:8081,jupyterlab:http:8090,vscode:http:8180,tensorboard:http:6006,mlflow-ui:preopen:5000,nniboard:preopen:8080"

WORKDIR /home/work
# vim: ft=dockerfile
