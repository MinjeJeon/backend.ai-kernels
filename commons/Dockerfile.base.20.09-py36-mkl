FROM ubuntu:20.04

ARG WHL_DIR="/tmp/pip"

# Python 2.7 or 3.6 is supported by Ubuntu Bionic out of the box
ARG python=3.6
ENV PYTHON_VERSION=${python}

ENV DEBIAN_FRONTEND=noninteractive \
    MPLBACKEND=Svg \
    PYTHONUNBUFFERED=1 \
    \
    \
    PATH="/usr/local/sbin:/usr/bin/cmake/bin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/bin/mecab" \
    mecab_dicdir=/usr/local/lib/mecab/dic/mecab-ko-dic \
    LANG=C.UTF-8

# Set default shell to /bin/bash
SHELL ["/bin/bash", "-cu"]

RUN apt-get update -y && \
    apt-get install -y --no-install-recommends software-properties-common && \
    add-apt-repository -y "deb http://security.ubuntu.com/ubuntu xenial-security main" && \
    apt-get update -y && \
    apt-get install -y --allow-downgrades --allow-change-held-packages --no-install-recommends \
        build-essential \
	ca-certificates \
        gcc g++ make \
	gfortran \
	dkms \
        git \
        curl \
        vim \
	yasm \
        wget zip unzip \
        software-properties-common \
  	openssh-client openssh-server \
        libssl-dev \
        libmpdec2 \
	pdsh curl net-tools \
	iputils-ping \
        libcurl3-dev \
        libfreetype6-dev \
        libhdf5-serial-dev \
        libzmq3-dev \
        libjpeg-dev \
        libpng-dev \
	libsm6 \
	libxext6 \
	libxrender-dev \
	libcairo2-dev libgirepository1.0-dev pkg-config gir1.2-gtk-3.0 \
        libgeos-dev libgeos++-dev \
        pkg-config \
	gpg-agent \
        zlib1g-dev \
	mime-support \
	proj-bin libproj-dev libgeos-dev libgeos++-dev graphviz \
        python${PYTHON_VERSION} \
        python3-dev \
	libxml2-dev \
	libxslt1-dev \
	libasound2-dev \
	libnuma-dev \
        libtiff-dev \
	libavcodec-dev \
        libavformat-dev \
	libswscale-dev \
	libxine2-dev \
	libv4l-dev \
	libboost-dev \
	libboost-system-dev \
	libboost-filesystem-dev \
	xvfb \
	fonts-nanum \
	fonts-nanum-coding \
	fonts-nanum-extra \
        rsync \
        openjdk-8-jdk \
        openjdk-8-jre-headless \
        openssh-client \
        openssh-server \
	intel-mkl \
        && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

RUN pkg-config --libs mkl-static-lp64-iomp
RUN curl -sL https://deb.nodesource.com/setup_10.x | bash - && \
    apt-get update -y && \
    apt-get install -y nodejs

# OFED
ENV STAGE_DIR=/tmp
RUN mkdir -p ${STAGE_DIR}
ENV MLNX_OFED_VERSION=5.0-2.1.8.0
RUN cd ${STAGE_DIR} && \
    wget -q -O - http://www.mellanox.com/downloads/ofed/MLNX_OFED-${MLNX_OFED_VERSION}/MLNX_OFED_LINUX-${MLNX_OFED_VERSION}-ubuntu20.04-x86_64.tgz | tar xzf -
RUN cd ${STAGE_DIR}/MLNX_OFED_LINUX-${MLNX_OFED_VERSION}-ubuntu20.04-x86_64 && \
    ./mlnxofedinstall --user-space-only --without-fw-update --all -q && \
    cd ${STAGE_DIR} && \
    rm -rf ${STAGE_DIR}/MLNX_OFED_LINUX-${MLNX_OFED_VERSION}-ubuntu20.04-x86_64*

RUN if [[ "${PYTHON_VERSION}" == "3.6" ]]; then \
        apt-get install -y python${PYTHON_VERSION}-distutils python-apt ; \
    fi

RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 2

WORKDIR /tmp
RUN curl https://bootstrap.pypa.io/get-pip.py | python3 && \
    python3 -m pip install --no-cache-dir -U setuptools pip 

RUN wget https://github.com/Kitware/CMake/releases/download/v3.15.3/cmake-3.15.3-Linux-x86_64.sh \
         -q -O /tmp/cmake-install.sh && \
    chmod u+x /tmp/cmake-install.sh && \
    mkdir /usr/bin/cmake && \
    /tmp/cmake-install.sh --skip-license --prefix=/usr/bin/cmake && \
    rm /tmp/cmake-install.sh

COPY ./numpy-1.18.5-cp36-cp36m-manylinux2010_x86_64.whl /tmp
COPY ./pandas-1.0.4+4.g29edbab4a-cp36-cp36m-linux_x86_64.whl /tmp

RUN python3 -m pip install --no-cache-dir --upgrade -Iv \
            git+https://github.com/haven-jeon/PyKoSpacing.git \
	    git+https://github.com/ssut/py-hanspell.git \
    	    Cython==0.29.20 \
	    /tmp/numpy-1.18.5-cp36-cp36m-manylinux2010_x86_64.whl \
	    /tmp/pandas-1.0.4+4.g29edbab4a-cp36-cp36m-linux_x86_64.whl \
	    tornado==6.0.4 \
	    pystan==2.19.1.1 \
	    pycairo==1.19.0 \
	    python-language-server[all] \	    
	    matplotlib==3.1.1 

WORKDIR /tmp
RUN git clone -q --branch=master git://github.com/xianyi/OpenBLAS.git && \
    cd OpenBLAS && \
    make DYNAMIC_ARCH=1 NO_AFFINITY=1 NUM_THREADS=48 FC=gfortran && \
    make install
RUN git clone --recursive https://github.com/bodono/scs-python.git  && \
    cd /tmp/scs-python && \
    python3 setup.py install --scs
    
RUN python3 -m pip install pip --no-cache-dir \
    	    Cartopy==0.18.0 \
	    notebook==6.0.3 

WORKDIR /tmp
COPY ./requirements.20.08.txt /tmp
RUN python3 -m pip install --no-cache-dir --upgrade -r requirements.20.08.txt && \
    rm -f /tmp/*.whl /tmp/requirements.20.08.txt

