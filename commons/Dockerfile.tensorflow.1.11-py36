# Build target: lablup/common-tensorflow:1.11-py36
FROM ubuntu:18.04

# setup the Bazel 
ENV BAZEL_VERSION 0.15.0

# The TensorFlow version
ENV TF_VERSION 1.11

# Install system package dependencies
# NOTE: running bazel requires JDK, not JRE!
RUN apt-get update && apt-get install -y --no-install-recommends \
        curl gcc g++ make cmake git \
	libssh-dev \
	proj-bin libproj-dev \
	libgeos-dev libgeos++-dev \
        python3 python3-pip \
	mime-support \
        libcurl3-dev \
        libfreetype6-dev \
        libhdf5-serial-dev \
        libpng-dev \
        libzmq3-dev \
        libcups2 \
        pkg-config \
        rsync \
        imagemagick \
        graphviz \
        rsync \
        sed \
        zip zip unzip \
        zlib1g-dev \
        openjdk-8-jdk \
        openjdk-8-jre-headless && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Prepare for building TensorFlwo wheel
RUN python3 -m pip install -U setuptools pip && \
    python3 -m pip install --no-cache-dir \
    	wheel \
    	numpy \
	scipy \
        sklearn \
        pandas \
        keras_applications \
        keras_preprocessing \
        matplotlib \
        && \
    rm -f /tmp/*.whl

# python alternative support
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 2

# Running bazel inside a `docker build` command causes trouble, cf:
#   https://github.com/bazelbuild/bazel/issues/134
# The easiest solution is to set up a bazelrc file forcing --batch.
RUN echo "startup --batch" >>/etc/bazel.bazelrc
RUN echo "build --spawn_strategy=standalone --genrule_strategy=standalone" >>/etc/bazel.bazelrc

WORKDIR /
RUN mkdir /bazel && \
    cd /bazel && \
    curl -H "User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36" -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh && \
    curl -H "User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36" -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE && \
    chmod +x bazel-*.sh && \
    ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh && \
    cd / && \
    rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh

ENV CI_BUILD_PYTHON python

RUN echo "/opt/intel/mkl/lib/intel64" >> /etc/ld.so.conf.d/intel.conf && \
    ldconfig && \
    echo ". /opt/intel/bin/compilervars.sh intel64" >> /etc/bash.bashrc

RUN bazel version && \
    python -c "import sys; print(sys.prefix); print(sys.version_info)" && \
    python -c "import numpy; numpy.show_config()" && \
    python -c "import scipy; scipy.show_config()" 
    

RUN : build TensorFlow pip package && \
    cd /tmp && \
    curl -SL https://github.com/tensorflow/tensorflow/archive/r${TF_VERSION}.tar.gz | tar xzf -

# AVX & AVX2 support under haswell core
RUN cd /tmp/tensorflow-r${TF_VERSION} && \
        GCC_HOST_COMPILER_PATH=/usr/bin/gcc \
        CC_OPT_FLAGS="-march=x86-64 -mavx -mavx2 -mfma -mfpmath=both -msse4.1 -msse4.2" \
        TF_NEED_JEMALLOC=1 \
        TF_NEED_GCP=1 \
        TF_NEED_HDFS=1 \
        TF_ENABLE_XLA=1 \
        TF_NEED_VERBS=0 \
        TF_NEED_OPENCL=0 \
        TF_NEED_OPENCL_SYCL=0 \
        TF_NEED_CUDA=0 \
        TF_CUDA_CLANG=0 \
        TF_DOWNLOAD_CLANG=0 \
        TF_NEED_TENSORRT=0 \
        TF_NEED_MPI=0 \
        TF_NEED_GDR=0 \
        TF_NEED_S3=1 \
        TF_NEED_KAFKA=0 \
        TF_SET_ANDROID_WORKSPACE=0 \
    bash configure && \
    tensorflow/tools/ci_build/builds/configured CPU \
        bazel build \
        --config=opt --config=mkl \
        --cxxopt="-D_GLIBCXX_USE_CXX11_ABI=0" \
        //tensorflow/tools/pip_package:build_pip_package && \
    ./bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg

RUN ls -l /tmp/tensorflow_pkg

# vim: ft=dockerfile sts=4 sw=4 et tw=0
